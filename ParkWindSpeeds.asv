function [WindSpeeds, ParkArea] = ParkWindSpeeds(ParkBoundaries, WindData, GeoInfo)
% Function that gives the wind speed matrix of a park from latitude and
% longitude park boundaries input. ParkBoundaries is of the form
% [WestBound, EastBound, NorthBound, SouthBound]
% The WindData is the wind speed data of
% the entire region (Europe) which can be aquired with the ReadWindData
% function, and GeoInfo is the info file that can also be aquired
% with ReadWindData, it must be called like this: [WindData,
% GeoInfo] = ReadWindData(...)

% Error message if ParkBoundaries is wrong format
if length(ParkBoundaries)~=4
    error('ERROR: Wrong number of Park Boundaries given, must be 4')
end

% First find the limits of the region from which the data is extracted
RegionWestB = GeoInfo.LongitudeLimits(1);
RegionEastB = GeoInfo.LongitudeLimits(2);
RegionNorthB = GeoInfo.LatitudeLimits(2);
RegionSouthB = GeoInfo.LatitudeLimits(1);

% Find the boundaries of the park
WestBound = ParkBoundaries(1);
EastBound = ParkBoundaries(2);
NorthBound = ParkBoundaries(3);
SouthBound = ParkBoundaries(4);

% Show an error message if the park is outside the limits of WindData
if WestBound<RegionWestB || EastBound>RegionEastB || NorthBound>RegionNorthB || SouthBound<RegionSouthB
    error('ERROR: Park is outside the wind data geographic boundaries')
end

% Find where in the WindData matrix the Park is located
LongitudeRes = 1/(GeoInfo.SampleSpacingInLongitude);
LatitudeRes = 1/(GeoInfo.SampleSpacingInLatitude);

WestIndex = (WestBound-RegionWestB)*LongitudeRes + 1;
EastIndex = (EastBound-RegionWestB)*LongitudeRes + 1;
NorthIndex = (RegionNorthB-NorthBound)*LatitudeRes + 1;
SouthIndex = (RegionNorthB-SouthBound)*LatitudeRes + 1;

WindSpeeds = WindData(NorthIndex:SouthIndex, WestIndex:EastIndex, :);

% Then find the area of the park, will vary depending on latitude
ParkArea = 111*(NorthBound-SouthBound)*6371*cos((NorthBound+SouthBound)/2)*0.0174533*(EastBound-WestBound); % in km^2
